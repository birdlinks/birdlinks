syntax = "proto3";

package service;

message SchemaSpec {
  // 参数最小值（int、float类型特有）
  string min = 1;
  // 参数最大值（int、float类型特有）
  string max = 2;
  // 属性单位（int、float类型特有，非必填）
  string unit = 3;
  // 单位名称（int、float、double类型特有，非必填）
  string unit_name = 4;
  // 数组元素的个数，最大512（array类型特有）
  int32 array_size = 5;
  // 步长（text、enum类型无此参数）
  int32 step = 6;
  // 数据长度，最大10240（text类型特有）。
  int32 length = 7;
  // bool类型特有
  bool bool_value = 8;
  // array类型特有 数组元素的类型
  string item_type = 9;
}

message DataType {
  // 属性类型: int、float、text、date、bool（0或1的int类型
  // enum（int类型，枚举项定义方法与bool类型定义0和1的值方法相同）
  // struct（结构体类型，可包含前面7种类型，下面使用"specs":[{}]描述包含的对象）
  // array（数组类型，支持int、double、float、text、struct）
  string type = 1;
  // 属性名称
  SchemaSpec spec = 2;
}

message ProductProfile {
  // 产品ProductKey
  string product_key = 1;
}

message SchemaProperty {
  // 属性唯一标识符
  string identifier = 1;
  // 属性名称
  string name = 2;
  // 属性读写类型：只读（r）或读写（rw）
  string access_mode = 3;
  // 数据格式
  DataType data_type = 4;
}

message SchemaEvent {
  // 事件唯一标识符
  string identifier = 1;
  // 事件名称
  string name = 2;
  // 事件类型：info（信息类事件）、alert（告警类事件）、error（错误类事件）
  string type = 3;
  // 事件数据格式
  repeated SchemaProperty out = 5;
}

message SchemaService {
  // 服务唯一标识符
  string identifier = 1;
  // 服务名称
  string name = 2;
  // 服务描述
  string description = 3;
  // 服务输入参数
  repeated SchemaProperty in = 4;
  // 服务输出参数
  repeated SchemaProperty out = 5;
}


// 物模型定义
message Schema {
  // 产品ProductKey
  ProductProfile profile = 1;
  // 属性列表
  repeated SchemaProperty properties = 2;
  // 事件列表
  repeated SchemaEvent events = 3;
  // 服务列表
  repeated SchemaService services = 4;
}
